<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <title>{{ title }}</title>
 
    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    
  
    <!-- Icon -->
    <script src="https://unpkg.com/feather-icons"></script>
    
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.css" rel="stylesheet">
       
    <link href="https://unpkg.com/tabulator-tables/dist/css/tabulator.min.css" rel="stylesheet">
    <script type="text/javascript" src="https://unpkg.com/tabulator-tables/dist/js/tabulator.min.js"></script>
    
    <style type="text/css">
		h6 {
			color: {{ background_color }};
		}
		
		{% for key,val in colors_css.items() %}
		.{{ key }} {
			background-color: {{ val }};
			height: 10px;
			width: 10px;
		}
		{% endfor %}
    h2, h3 {
      padding:10px;
    }
    header {
            background-color: {{ background_color }};
            color: {{ font_color }};
    }
    svg.text.branch-support {
      display:none;
      color:{{ background_color }};
      font-size: x-small;
    }
    .hidden-graph{
      margin: 2em;
    }
    .activeisolate {
      fill:{{ background_color }};
      font-size: larger;

    }
    @media (min-width: 768px) {
    .modal-xl {
    max-width: 90%; 
            }
    }
    .details {
            display: none;
    }
    .btn-outline-primary {
      color: {{ background_color }};
      border-color: {{ background_color }};
    }
		.dropdown-item.active, .dropdown-item:active {
		  background-color: {{ font_color }};
		  color: {{ background_color }};
		}

    .btn-outline-primary:hover {
      background-color:  {{ background_color }};
      color: {{ font_color }};
    }

    .btn-outline-primary:not(:disabled):not(.disabled).active {
      background-color:  {{ background_color }};
      color: {{ font_color }};
    }

    #current-table {
      margin-top:20px;
      border:none;
    }

    .btn-outline-secondary {
      color: {{ background_color }};
      border-color: {{ background_color }};
    }

    .btn-outline-secondary:hover {
      background-color:  {{ background_color }};
      color: {{ font_color }};
    }

    .btn-outline-secondary:not(:disabled):not(.disabled).active {
      background-color:  {{ background_color }};
      color: {{ font_color }};
    }
    .page-link {
      color:{{ background_color }};
      
    }
    .page-item.active .page-link{
      background-color:  {{ background_color }};
      border-color:{{ background_color }};
      color: {{ font_color }};
    }
    #current-table{
    background-color:white;
    /* border: 1px solid #333; */
    border-radius: 4px;
}
.tabulator-col-content {
  background-color:{{ background_color }};
}

#version-table .tabulator-col {
  color:white;
}

/*Theme the header*/
#current-table .tabulator-header {
    background-color:{{ background_color }};
    color:#fff;
}

/*Allow column header names to wrap lines*/
#current-table .tabulator-header .tabulator-col,
#current-table .tabulator-header .tabulator-col-row-handle {
    white-space: normal;
    background-color: {{ background_color }};
}

/*Color the table rows*/
#current-table .tabulator-tableHolder .tabulator-table .tabulator-row{
    color:#fff;
    background-color: #666;
}

/*Color even rows*/
    #current-table .tabulator-tableHolder .tabulator-table .tabulator-row:nth-child(even) {
    background-color: #444;
}
     
      </style> 
  </head>
  <body>
    <header>
      <h1 class="left" style="margin:5px;">{{title}}</h1>
        <p class ="right" style="margin:5px;"> Data generated {{date}} by {{user}} </p>
        <hr>
        <nav class="navbar navbar-expand-lg navbar-light bg-light" style="border-bottom: {{ background_color }} solid 10px;">
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo01" aria-controls="navbarTogglerDemo01" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
        
        <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
        {% if phylo == 'phylo' %}
          <li class="nav-item active">
            <a class="nav-link phylogeny-button" href="#">Tree<span class="sr-only">(current)</span></a>
          </li>
        {% endif %}
        {% for t,v in tables.items() %}
          <li class="nav-item">
            <a class="nav-link detail-button {{v.link}}-button" href="#">{{v.name}}</a>
          </li>
        {% endfor %}
        </ul>
      </div>
      <!-- div for phylogeny buttons -->
      <div class="hidden-nav-phylo btn-group" id = "hidden-nav-phylo"  style = "float:right; ">
        <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
          <li lass="nav-item dropdown">
            <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Annotate</a>
            <div class="dropdown-menu" id="annotate">
            {% for metadata_column in metadata_columns %}
              <a class="dropdown-item annotate-tree" href="#">{{metadata_column}}</a>
            {% endfor %}
              <div class="dropdown-divider"></div>
              <a class="dropdown-item annotate-tree" href="#">All</a>
              <div class="dropdown-divider"></div>
              <a class="dropdown-item annotate-tree" href="#">Clear</a>
            </div>
          </li>
          <li lass="nav-item">
            <a class="nav-link legend-button" id = "toggle-legend" href="#">Toggle legend</a>
          </li>
          <li lass="nav-item">
            <a class="nav-link reset-tree-button" href="#">Reset</a>
          </li>
          <li lass="nav-item">
            <a class="nav-link download-tree-button" href="#">Download newick</a>
          </li>
          <li lass="nav-item">
            <a class="nav-link export-tree-button" href="#">Download image</a>
          </li>
        </ul>
      </div>
      <!-- div for download table button -->
      <div id = "table-download"  style = "display: none;">
        <ul class="navbar-nav mr-auto mt-2 mt-lg-0">  
          <li lass="nav-item">
            <a class="nav-link csv-download-button download-csv" href="#">Download csv</a>
          </li>
          <!-- <li lass="nav-item">
            <a class="nav-link excel-download-button" id = "download-excel" href="#">download xlsx</a>
          </li> -->
        </ul>
      </div>
      <!-- div for distance graphs buttons  -->
      <div class="hidden-graph-nav btn-group" id = "hidden-graphs"  style = "display:none;">
        <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
          <li lass="nav-item dropdown">
            <a class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Graphs</a>
            <div class="dropdown-menu" id="annotate">
              <a class="dropdown-item snps heatmap" id = "snp-distances-hmp" href="#">Heatmap</a>
              <a class="dropdown-item snps distribution" id = "snp-distances-dist" href="#">Distribution</a>
           </div>
          </li>
        </ul>
      </div>
    </nav>
    </header>
    


<!-- div for summary table and phylogenetic tree -->
<div class= "container-fluid">
<!-- buttons -->




<div id = "empty-table"></div>
<div id="comment"></div>

  
<div id = "snp-distances-distribution" class = "hidden-graph" style="display:none;">  <!-- placeholder for graphs  --> </div>
<div id = "snp-distances-heatmap" class = "hidden-graph" style="display:none; overflow-x:auto;">  <!-- placeholder for graphs  --> </div>
<div id = "snp-density-graph" class = "hidden-graph" style="display: none;">  <!-- placeholder for graphs  --> </div>

<div id="current-table">
    <!-- placeholder for selected table = put selected table in this div -->    
  </div>
  <div id = "pan-svg" style = "display:none;margin:10px;">
    {{ pan_svg }}
  </div>
  </div>
{% if phylo == 'phylo' %}
  <div id = "phylogeny">
    
    
    <div id="tree_string" style="display: none;">
    {{newick}}
    </div>
    <div id = "phylocanvas" class = "tree" style = " width: 90%; margin:5px; border: 1px solid lightgray; float:left  " >
    <!-- Placeholder for phylogenetic tree -->
    </div>
    
	</div>
	<div id = "legend" class = "tree" style = " width: 90%; margin:5px;  display: none ;flex-wrap: wrap; ">
    {% for category in legend %}
    <div class = "legend-{{category}}" style = "border:1px dotted lightgray;">
   	<h6 style="margin: 10px;">{{category}}</h6>
      {% for lg in legend[category] %}
      <table style="margin: 20px;" >
      {% for key,val in lg.items() %}
				<tr>
          <td > <div class = "square {{val}}"></div> </td> 
					<td> <div >{{key}}</div>  </td>
				</tr>	
      {% endfor %}
      </table>
      {% endfor %}
    </div>
    {% endfor %}
		
		
  </div>
  {% endif %}
  </div>         
  
        
<!-- Datatables (to sort tables) -->
<!-- <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script> -->
<!-- <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap.min.js"></script> -->
<!-- <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script> -->
<!-- <script type="application/javascript" src="https://cdn.rawgit.com/phylocanvas/phylocanvas-quickstart/v2.8.1/phylocanvas-quickstart.js"></script> -->
<!-- <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.5.6/js/dataTables.buttons.min.js"></script>
<script src= "https://cdn.datatables.net/buttons/1.5.6/js/buttons.flash.min.js"></script> -->
<!-- <script src= "https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script> -->
<!-- <script src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.print.min.js"></script> -->


<script src="https://unpkg.com/@phylocanvas/phylocanvas.gl@latest/dist/bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vega@5.20.2"></script>
    <script src="https://cdn.jsdelivr.net/npm/vega-lite@5.1.1"></script>
    <script src="https://cdn.jsdelivr.net/npm/vega-embed@6.12.2"></script>


<script>

function displayWindowSize(){
    // Get width and height of the window excluding scrollbars
    var w = document.documentElement.clientWidth;
    var h = document.documentElement.clientHeight;
	var div = document.getElementById("phylocanvas");
	// Set the height of the phylocanvas to be 50% of the window height
	var phylocanvas = document.getElementById("phylocanvas");
	phylocanvas.style.height = (h*.5) + "px";
	return h  
}


var menus = document.getElementsByClassName("nav-link");
// to capitalize the first letter of the string
function capitalizeFirstLetter(val) {
    return String(val).charAt(0).toUpperCase() + String(val).slice(1);
}
// set menu title to capital
for ( var i = 0; i < menus.length; i++){
  console.log(menus[i].innerHTML);
  var new_menu = capitalizeFirstLetter(menus[i].innerHTML);
  menus[i].innerHTML = new_menu;
}
// set up annotation to extract
var annot=[];
var annot_all = {{ metadata_columns | tojson }};
function updateAnnot(val, annot){
	console.log(val);
	console.log(annot);
	if (val.hasClass("active") && val.hasClass("annotate-tree") && val[0].innerHTML != "Clear" && val[0].innerHTML != "All") {
		console.log("added " + val[0].innerHTML);
		annot.push(val[0].innerHTML);
	} else if (val[0].innerHTML == "All" && val.hasClass("annotate-tree")){
		annot = annot_all;
		val.removeClass("active");
	} else if (val[0].innerHTML == "Clear"){	
		annot = [];
		val.removeClass("active");
	} else {
		var index = annot.indexOf(val[0].innerHTML);
		if (index > -1) {
			annot.splice(index, 1);
		}
	}
	// console.log(annot);
	return annot;
}
var elements = document.getElementsByClassName("dropdown-item");
for (var i = 0; i < elements.length; i++) {
  var element = elements[i];

  element.addEventListener("click", function() {
	
  if (this.classList.contains("annotate-tree")) {
    console.log("clicked " + this.innerHTML);
	if (this.innerHTML == "Clear") {
		for (var i = 0; i < elements.length; i++){
			elements[i].classList.remove("active");
		}
	} else if (this.innerHTML == "All") {
		for (var i = 0; i < elements.length; i++){
			if (elements[i].innerHTML == "Clear"){
				elements[i].classList.remove("active");
			} else if (elements[i].classList.contains("annotate-tree")){
        elements[i].classList += " active";
      } else {
        elements[i].classList.remove("active");
      }
			
		}
		}
	
	$(this).toggleClass("active");
	annot = updateAnnot(val = $(this), annot = annot);
	console.log(annot);
  }
  });
}


var snp_distance_chart = {{ snp_distances | safe }};
      vegaEmbed('#snp-distances-distribution', snp_distance_chart).then(function(result){
        
      });

var snp_density_chart = {{ snp_density | safe }};
  vegaEmbed('#snp-density-graph', snp_density_chart).then(function(result){
  
});

var heatmap_chart = {{ snp_heatmap | safe }};
  vegaEmbed('#snp-distances-heatmap', heatmap_chart).then(function(result){
  
});


$("a.phylogeny-button").click(function(){
  $("#current-table").empty();
  $("#table-download").hide();
  $("#phylogeny").show();
  $(".tree").show();
  $("#hidden-nav-phylo").show();
  $("#comment").empty();
  $("#software-versions").hide();
  $("#snp-distances-distribution").hide();
  $("#snp-density-graph").hide();
  $("#hidden-graphs").hide();
  $('#pan-svg').hide();
  $("#empty-table").empty();
  $("#legend").hide();
});

$("a.legend-button").click(function(){
  console.log('toggle legend');
  var legend = document.getElementById("legend");
  
  if (legend.style.display === "flex") {
	legend.style.display = "none";
  } else  {
	legend.style.display = "flex";
  } 
});

var table_dict = {{tables | tojson}};
var column_dict = {{ columns | tojson }};
var comment = {{ comment | tojson }};
$("a.detail-button").click(function(){
  console.log('button clicked');
  $("#table-download").show();
  $("#snp-distances-distribution").hide();
  $("#snp-distances-buttons").hide();
  $('#pan-svg').hide();
  $("#snp-density-graph").hide();
  $("#hidden-graphs").hide();
  var section = $(this).text().replace(/\s/g,'-').toLowerCase();
  console.log(section);
  
  $("#phylogeny").hide();
  $(".tree").hide();
  $("#hidden-nav-phylo").hide();
  $("#software-versions").hide();
  $("#current-table").empty();
  $("#comment").empty();
  $("#empty-table").empty();
  $("#comment").append("<p style='margin:5px; font-size:small;'><em>" + comment[section] + "</em></p>");
  
  if(section == 'distances') {
  $("#snp-distances-distribution").show();
  $("#hidden-graphs").show();

	let containingElement = document.querySelector('#hidden-graphs');

	document.body.addEventListener('click', function( event ){
		if( containingElement.contains( event.target ) ){
			// do nothing, click was inside container
			console.log('clicking a graph tab');
			// console.log(event.target.innerHTML.toLowerCase());
			event.target.classList.add('active');
		}
		var dgraphs = document.getElementsByClassName('snps');
		console.log(dgraphs);
		for (var i = 0; i < dgraphs.length; i++) {
			if (dgraphs[i].classList.contains('active')) {
				console.log('snp-distances-' + dgraphs[i].innerHTML.toLowerCase() + ' is active');
				
				$("#snp-distances-" + dgraphs[i].innerHTML.toLowerCase()).show();
				dgraphs[i].classList.remove('active');
			} else {
				$("#snp-distances-" + dgraphs[i].innerHTML.toLowerCase()).hide();
				
			}
		}
  });
	}
	
  if(section == 'core-genome'){
    
    $("#snp-density-graph").show();
  }
  if(section == 'pan-genome'){
    $('#pan-svg').show();
  }
  
  //create Tabulator on DOM element with id "example-table"
  if(column_dict[section].length > 1){
    var table = new Tabulator("#current-table", {
    pagination:"local",
    paginationSize:25,
    paginationSizeSelector:true,
    movableColumns:true,
    // height:205, // set height of table (in CSS or here), this enables the Virtual DOM and improves render speed dramatically (can be any valid css height value)
    data:table_dict[section]['tables'], //assign data to table
    layout:"fitColumns", //fit columns to width of table (optional)
    columns:column_dict[section],
    // rowClick:function(e, row){ //trigger an alert message when the row is clicked
    // 	console.log("Row " + row.getData().id + " Clicked!!!!");
    // },
    });
    $("#download-csv").click(function(){
      console.log('clicking download button')
        table.download("csv", "data.csv", {delimiter:","});
      });
    // $("#download-excel").click(function(){
    //   table.download("xlsx", section + ".xlsx", {sheetName:$(this).text()});
    // });
  } else {
    console.log("No results available for " + section);
    $("#comment").empty();
    $("#empty-table").append("<p><b>No data available for " + section + "</b></p>");
}
      
});
  
  
  
  function drawTree(tree_string, annot, height){
	console.log(tree_string);
	var tree = new phylocanvas.PhylocanvasGL(
				  document.querySelector("#phylocanvas"),
					{ 
					  // size: document.querySelector("#phylocanvas").getBoundingClientRect(),
					  treeToCanvasRatio:0.5,
					  showBlockHeaders:true,
					  blocks: annot,
					  blockLength: 48, // block size in pixels
					  blockPadding: 2, // the gap size between blocks in pixels
					  blockHeaderFontSize:15,
					  metadata :{{ metadata_tree | safe }},
					  source: tree_string,
					  type: phylocanvas.TreeTypes.Rectangular,
					  nodeSize:6,
					  showLabels: true,
					  showLeafLabels: true,
					  alignLabels:true,
					  interactive:true,
					  size : {
						width: document.querySelector("#phylocanvas").getBoundingClientRect().width,
						height:height}
					},
				  );
				  
				  return tree;
				}

  
  var tree_root = ["1"];
  var num_nodes = 4;
  $("#phylocanvas").height(displayWindowSize()/2);
  var tree_string = document.getElementById('tree_string').innerHTML;
  
  if (tree_string.trim() == "") {
    console.log("No tree available");
    
    $("#phylogeny").hide();
    if( menus[0].innerHTML.includes( "Tree")){
      console.log(menus[0].innerHTML)
      var default_table_name = menus[1].innerHTML.toLowerCase();
    } else {
      var default_table_name = menus[0].innerHTML.toLowerCase();
    }
    var table = new Tabulator("#current-table", {
    pagination:"local",
    paginationSize:25,
    paginationSizeSelector:true,
    movableColumns:true,
    // height:205, // set height of table (in CSS or here), this enables the Virtual DOM and improves render speed dramatically (can be any valid css height value)
    data:table_dict[default_table_name]['tables'], //assign data to table
    layout:"fitColumns", //fit columns to width of table (optional)
    columns:column_dict[default_table_name],
    // rowClick:function(e, row){ //trigger an alert message when the row is clicked
    // 	console.log("Row " + row.getData().id + " Clicked!!!!");
    // },
    });
    $("a.download-csv").click(function(){
      console.log('clicking download button')
        table.download("csv", "data.csv", {delimiter:","});
      });
  } else {
    console.log(tree_string);
    var tree = drawTree(tree_string, annot, displayWindowSize()/2);
  }

  $("#phylocanvas").hover(function(){
    
    var hn = tree.getHighlightedNode();
    
  });
  $(".dropdown-item").click(function(){
	var to_annot = annot;
	tree.blocks = []; // clear blocks first then add new ones
	tree.setProps(
		{blocks: to_annot}
	)
  });
  $("#phylocanvas").click(function(event){
    var hn = tree.getHighlightedNode();
    tree.setRoot(hn.id);
    tree_root.push(hn.id);
    
  });



  $("a.reset-tree-button").click(function(){
    tree.setRoot("1");
  });

  
  function downloadString(text, fileType, fileName) {
      var blob = new Blob([text], { type: fileType });

      var a = document.createElement('a');
      a.download = fileName;
      a.href = URL.createObjectURL(blob);
      a.dataset.downloadurl = [fileType, a.download, a.href].join(':');
      a.style.display = "none";
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      setTimeout(function() { URL.revokeObjectURL(a.href); }, 1500);
    }

  $("a.download-tree-button").click(function(){
    console.log('downloading newick');
    var nwk_download = tree.exportNewick();
    var filename = 'bohra.nwk'
    downloadString(nwk_download,'text',filename);
  });

  $("a.export-tree-button").click(function(){
    console.log('export');
    var png = tree.exportPNG();
    var filename = 'bohra.png';
    var download = document.createElement('a');
    download.href = png;
    download.download = filename;
    download.click();
  });

  $("#get-iso").click(function(){
    var i = $("#search-iso").val();
    console.log(i);

    var leaves = tree.getGraphWithoutLayout().leaves
    $.each(leaves, function(idx, val){
      if (val.id == i){
        tree.highlightNode(val);
      }
    })
  });
</script>

<script>
feather.replace()
</script>
</body>
</html>